# Name of your workflow.
name: Test (E2E)
# Trigger the workflow on push or pull request.
on: [push, pull_request]
# A workflow run is made up of one or more jobs.
jobs:
  # id of job, a string that is unique to the "jobs" node above.
  flutter-drive:
    # Creates a build matrix for your jobs. You can define different
    # variations of an environment to run each job in.
    strategy:
      # A set of different configurations of the virtual  
      # environment.
      matrix:
        device:
        - "macOS (macos)"
      # When set to true, GitHub cancels all in-progress jobs if any        
      # matrix job fails.
      fail-fast: false
    # The type of machine to run the job on.
    runs-on: macos-latest
    # Contains a sequence of tasks.
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2.3.4

    - name: Install FVM & Flutter
      run: |
        brew tap leoafarias/fvm
        brew install fvm
        fvm install stable

    - name: Set Up XCode
      uses: devbotsxyz/xcode-select@v1.1.0
    
    - name: Enable desktop
      run: fvm flutter config --enable-macos-desktop

    - name: Run integration tests
      timeout-minutes: 30
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        fvm flutter doctor -v
        fvm flutter pub get
        xcrun simctl io booted recordVideo recording.mov &
        sleep 5
        export RECORDING_PID=${!}
        echo "Recording process up with pid: ${RECORDING_PID}"
        fvm flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart -d macos
        sleep 5
        kill -SIGINT $RECORDING_PID
        sleep 10
        cp recording.mov /tmp/sidekick_record

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: online_record_${{ matrix.device }}
        path: /tmp/sidekick_record